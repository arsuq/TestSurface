<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TestSurface</name>
    </assembly>
    <members>
        <member name="M:TestSurface.Assert.SameValues(System.Object,System.Object,System.Nullable{System.Reflection.BindingFlags},System.Collections.Generic.HashSet{System.Object})">
            <summary>
            Compares the two objects by value. 
            Selects all public fields and properties if no BindingFlags are provided.
            </summary>
            <returns>True if the objects are the same, compared according to the BindingFlags selection.</returns>
            <exception cref="T:System.ArgumentException">When the objects types mismatch.</exception>
        </member>
        <member name="M:TestSurface.Assert.ClearTypeCache">
            <summary>
            Erases the cached type meta-data,
            </summary>
        </member>
        <member name="P:TestSurface.ITestSurface.Info">
            <summary>
            Description of the test and the arguments.
            </summary>
        </member>
        <member name="P:TestSurface.ITestSurface.FailureMessage">
            <summary>
            Set if the test fails.
            </summary>
        </member>
        <member name="P:TestSurface.ITestSurface.Passed">
            <summary>
            Set in all cases, null means unknown outcome.
            </summary>
        </member>
        <member name="P:TestSurface.ITestSurface.IsComplete">
            <summary>
            Indicates whether the whole test was covered or some parts were skipped.
            </summary>
        </member>
        <member name="P:TestSurface.ITestSurface.IndependentLaunchOnly">
            <summary>
            Some tests have no default initial values or require multiple instances
            of the test application to be running at the same time.
            </summary>
        </member>
        <member name="M:TestSurface.ITestSurface.Run(System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.List{System.String}})">
            <summary>
            If launched, the runner will wait for it to complete.
            </summary>
            <param name="args">The parsed arguments dictionary where the keys are switches.</param>
            <returns>A task to be awaited.</returns>
        </member>
        <member name="M:TestSurface.Print.Trace(System.String,System.Int32,System.Boolean,System.ConsoleColor,System.ConsoleColor,System.Object[])">
            <summary>
            Traces the text if both IgnoreInfo and IgnoreAll are false.
            </summary>
            <param name="text">The text string.</param>
            <param name="leftMargin">Number of chars to pad each line.</param>
            <param name="split">Splits the text into multiple lines and adds the margin.</param>
            <param name="c">The trace foreground color.</param>
            <param name="bg">The trace background color. </param>
            <param name="formatArgs">The standard string format arguments.</param>
        </member>
        <member name="F:TestSurface.Print.SPLIT_LINE">
            <summary>
            The text splitter string.
            The default is Environment.NewLine.
            </summary>
        </member>
        <member name="F:TestSurface.Print.SplitOptions">
            <summary>
            By default is set to StringSplitOptions.None.
            </summary>
        </member>
        <member name="F:TestSurface.Print.IgnoreAll">
            <summary>
            Never traces if true.
            </summary>
        </member>
        <member name="F:TestSurface.Print.IgnoreInfo">
            <summary>
            Ignores all but the SystemTrace and the test header and status
            </summary>
        </member>
        <member name="F:TestSurface.Print.LockAwaitMS">
            <summary>
            Will bail tracing after waiting the specified timeout in milliseconds.
            If ThrowOnLockTimeout is true will throw a TimeoutException.
            The default value is 100.
            </summary>
        </member>
        <member name="F:TestSurface.Print.ThrowOnLockTimeout">
            <summary>
            By default is true.
            </summary>
        </member>
        <member name="F:TestSurface.Print.SerializeTraces">
            <summary>
            If there is no threading involved set to false.
            Starts as true.
            </summary>
        </member>
        <member name="M:TestSurface.Runner.Run(System.String[])">
            <summary>
            Starts all discoverable tests. 
            </summary>
            <remarks>
            Only one Run execution at a time is allowed.
            </remarks>
            <exception cref="T:System.InvalidOperationException">If another Run is still executing.</exception>
            <param name="args">The arguments list</param>
        </member>
    </members>
</doc>
